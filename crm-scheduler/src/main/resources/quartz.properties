#============================================================================
# Configure Main Scheduler Properties
#============================================================================

org.quartz.scheduler.instanceName = crmScheduler
org.quartz.scheduler.instanceId = AUTO

#============================================================================
# Configure ThreadPool
#============================================================================

org.quartz.threadPool.class = org.springframework.scheduling.quartz.SimpleThreadPoolTaskExecutor
org.quartz.threadPool.threadCount = 25
org.quartz.threadPool.threadPriority = 5

#============================================================================
# Configure JobStore
#============================================================================

org.quartz.jobStore.misfireThreshold = 60000

org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.useProperties = true
org.quartz.jobStore.dataSource = DS
org.quartz.jobStore.tablePrefix = SC_

org.quartz.jobStore.isClustered = true
org.quartz.jobStore.clusterCheckinInterval = 20000

#============================================================================
# Configure Datasources
#============================================================================

org.quartz.dataSource.DS.driver = oracle.jdbc.driver.OracleDriver
org.quartz.dataSource.DS.URL = jdbc:oracle:thin:@//122.51.104.204:1521/orcl
org.quartz.dataSource.DS.user = crmdev
org.quartz.dataSource.DS.password = 123456
org.quartz.dataSource.DS.maxConnections = 5
org.quartz.dataSource.DS.validationQuery=select 0 from dual

#Skip Update Check
org.terracotta.quartz.skipUpdateCheck=true

#The shutdown-hook plugin catches the event of the JVM terminating, and calls shutdown on the scheduler.
org.quartz.plugin.shutdownhook.class = org.quartz.plugins.management.ShutdownHookPlugin
org.quartz.plugin.shutdownhook.cleanShutdown = true

#The logging trigger history plugin catches trigger events (it is also a trigger listener) and logs then with Jakarta Commons-Logging. See the class JavaDoc for a list of all the possible parameters.
org.quartz.plugin.triggHistory.class = cn.com.zsyk.crm.scheduler.plugin.LoggingPlugin