<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.zsyk.crm.manage.mapper.SysRuleCombineRuleMapper">
  <resultMap id="BaseResultMap" type="cn.com.zsyk.crm.manage.entity.SysRuleCombineRule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="combine_rule_id" jdbcType="CHAR" property="combineRuleId" />
    <result column="combine_rule_code" jdbcType="VARCHAR" property="combineRuleCode" />
    <result column="combine_rule_name" jdbcType="VARCHAR" property="combineRuleName" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="risk_feature" jdbcType="VARCHAR" property="riskFeature" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_date" jdbcType="VARCHAR" property="updateDate" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="time_stamp" jdbcType="TIMESTAMP" property="timeStamp" />
    <result column="rec_stat" jdbcType="VARCHAR" property="recStat" />
    <result column="combine_expression" jdbcType="LONGVARCHAR" property="combineExpression" />
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
    <result column="isUsed" property="isUsed" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_rule_combine_rule
    where combine_rule_id = #{combineRuleId,jdbcType=CHAR}
  </delete>
  <insert id="saveCombineRule" parameterType="cn.com.zsyk.crm.manage.entity.SysRuleCombineRule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_rule_combine_rule (combine_rule_id, combine_rule_code, combine_rule_name, 
      version, risk_feature, create_date, 
      create_time, create_user, update_date, 
      update_time, update_user, time_stamp, 
      rec_stat, combine_expression, remark
      )
    values (#{combineRuleId,jdbcType=CHAR}, #{combineRuleCode,jdbcType=VARCHAR}, #{combineRuleName,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER}, #{riskFeature,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{timeStamp,jdbcType=TIMESTAMP}, 
      #{recStat,jdbcType=VARCHAR}, #{combineExpression,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.com.zsyk.crm.manage.entity.SysRuleCombineRule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_rule_combine_rule
    set combine_rule_code = #{combineRuleCode,jdbcType=VARCHAR},
      combine_rule_name = #{combineRuleName,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      risk_feature = #{riskFeature,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      time_stamp = #{timeStamp,jdbcType=TIMESTAMP},
      rec_stat = #{recStat,jdbcType=VARCHAR},
      combine_expression = #{combineExpression,jdbcType=LONGVARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where combine_rule_id = #{combineRuleId,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select combine_rule_id, combine_rule_code, combine_rule_name, version, risk_feature, 
    create_date, create_time, create_user, update_date, update_time, update_user, time_stamp, 
    rec_stat, combine_expression, remark
    from sys_rule_combine_rule
    where combine_rule_id = #{combineRuleId,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select combine_rule_id, combine_rule_code, combine_rule_name, version, risk_feature, 
    create_date, create_time, create_user, update_date, update_time, update_user, time_stamp, 
    rec_stat, combine_expression, remark
    from sys_rule_combine_rule
  </select>
  
   <select id="selectAllByEntity" resultMap="BaseResultMap" parameterType="cn.com.zsyk.crm.manage.entity.SysRuleCombineRule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select combine_rule_id, combine_rule_code, combine_rule_name, version, risk_feature, combine_expression, remark, 
    create_date, create_time, create_user, update_date, update_time, update_user, time_stamp, rec_stat
    from sys_rule_combine_rule where 1 = 1
    
    <if test="combineRuleId != null and combineRuleId != ''">
        and combine_rule_id  like CONCAT('%',#{combineRuleId},'%')
    </if>
    <if test="combineRuleCode != null and combineRuleCode != ''">
        and combine_rule_code  like CONCAT('%',#{combineRuleCode},'%')
    </if>
    <if test="combineRuleName != null and combineRuleName != ''">
        and combine_rule_name  like CONCAT('%',#{combineRuleName},'%')
    </if>
    <if test="version != null and version != ''">
        and version  like CONCAT('%',#{version},'%')
    </if>
    <if test="riskFeature != null and riskFeature != ''">
        and risk_feature  like CONCAT('%',#{riskFeature},'%')
    </if>
    <if test="combineExpression != null and combineExpression != ''">
        and combine_expression  like CONCAT('%',#{combineExpression},'%')
    </if>
    <if test="remark != null and remark != ''">
        and remark  like CONCAT('%',#{remark},'%')
    </if>
    <if test="recStat != null and recStat != ''">
        and rec_stat  like CONCAT('%',#{recStat},'%')
    </if>
  </select>
  
  
    <select id="findAll" resultMap="BaseResultMap" parameterType="map" >
    SELECT
      t1.combine_rule_id,
      t1.combine_rule_code,
      t1.combine_rule_name,
      utl_raw.cast_to_varchar2(t1.combine_expression) combine_expression,
      t1.version,
      utl_raw.cast_to_varchar2(t1.remark) remark,
      t1.risk_feature,
      t1.create_date,
      t1.create_time,
      t1.create_user,
      t1.update_date,
      t1.update_time,
      t1.update_user,
      t1.time_stamp,
      t1.rec_stat,
      COUNT(t3.strategy_name) AS isUsed
      FROM sys_rule_combine_rule t1
      LEFT JOIN sys_rule_strategy_combine_rel t2
      ON t1.combine_rule_id = t2.combine_rule_id
      LEFT JOIN sys_rule_strategy t3
      ON t2.strategy_id = t3.strategy_id
      AND t3.rec_stat='0'
      <where>
        <if test="combineRuleCode != null and combineRuleCode != ''">
          and t1.combine_rule_code LIKE CONCAT('%',#{combineRuleCode},'%' )
        </if>
        <if test="combineRuleName != null and combineRuleName != ''">
          and t1.combine_rule_name LIKE CONCAT('%',#{combineRuleName},'%' )
        </if>
        and t1.rec_stat = '0'
      </where>
      GROUP BY
      t1.combine_rule_id,
      t1.combine_rule_code,
      t1.combine_rule_name,
      utl_raw.cast_to_varchar2(t1.combine_expression),
      t1.version,
      utl_raw.cast_to_varchar2(t1.remark),
      t1.risk_feature,
      t1.create_date,
      t1.create_time,
      t1.create_user,
      t1.update_date,
      t1.update_time,
      t1.update_user,
      t1.time_stamp,
      t1.rec_stat
    <if test="isUsed == 0">
      HAVING COUNT(t3.strategy_name) = 0
    </if>
    <if test="isUsed == 1">
      HAVING COUNT(t3.strategy_name) > 0
    </if>
    order by t1.create_time desc
  </select>
  
    <insert id="saveCombineBaseRel" parameterType="java.util.HashMap"  >
    insert into sys_rule_combine_base_rel (id, combine_rule_id,base_rule_order, base_rule_id, create_date, create_time, create_user, update_date, update_time, update_user, time_stamp, rec_stat)
    values (#{id},#{combine_rule_id},#{base_rule_order},#{base_rule_id},#{createDate,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR}, #{timeStamp,jdbcType=TIMESTAMP}, #{recStat,jdbcType=VARCHAR})
  </insert>
  
    <!--查询组合规则基本规则关系-->
  <select id="findCombineBaseRels" resultType="java.util.HashMap" parameterType="java.lang.String" >
    SELECT t1.combine_rule_id,t2.base_rule_id AS id,t2.base_rule_order,t3.expression,t3.rule_name
    FROM sys_rule_combine_rule t1
    LEFT JOIN sys_rule_combine_base_rel t2
    ON t1.combine_rule_id = t2.combine_rule_id
    LEFT JOIN sys_rule_base_rule t3
    ON t2.base_rule_id = t3.base_rule_id
    WHERE t1.combine_rule_id = #{id}
    order by t2.base_rule_order
  </select>
  <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
        COMBINE_RULE_ID, COMBINE_RULE_CODE, COMBINE_RULE_NAME, utl_raw.cast_to_varchar2(COMBINE_EXPRESSION) COMBINE_EXPRESSION, VERSION, utl_raw.cast_to_varchar2(REMARK) REMARK, RISK_FEATURE, CREATE_DATE, CREATE_TIME, CREATE_USER, UPDATE_DATE, UPDATE_TIME, UPDATE_USER, TIME_STAMP, REC_STAT
    from sys_rule_combine_rule
    where combine_rule_id = #{combineRuleId}
  </select>
  <!--查询组合规则基本规则关系详情-->
  <select id="findCombineBaseRelsDetail" resultType="java.util.HashMap" parameterType="java.lang.String" >
    SELECT t1.combine_rule_id,t2.base_rule_id,t2.base_rule_order,t3.rule_name,utl_raw.cast_to_varchar2(t3.remark) remark,t3.create_user
    FROM sys_rule_combine_rule t1
    LEFT JOIN sys_rule_combine_base_rel t2
    ON t1.combine_rule_id = t2.combine_rule_id
    LEFT JOIN sys_rule_base_rule t3
    ON t2.base_rule_id = t3.base_rule_id
    WHERE t1.combine_rule_id = #{id}
    ORDER BY t2.base_rule_order
  </select>
  <!--根据基本规则查询出所有的组合规则-->
  <select id="findCombineRulesByBaseRuleId" resultMap="BaseResultMap"  parameterType="java.lang.String" >
    SELECT  t1.*
    FROM sys_rule_combine_rule t1,sys_rule_combine_base_rel t2
    WHERE t1.combine_rule_id = t2.combine_rule_id
    AND t2.base_rule_id = #{id}
    AND t1.rec_stat = '0'
  </select>
  <!--修改组合规则内容-->
  <update id="updateCombineRule" parameterType="cn.com.zsyk.crm.manage.entity.SysRuleCombineRule" >
    update sys_rule_combine_rule
    set combine_rule_code = #{combineRuleCode},
    combine_rule_name = #{combineRuleName},
    combine_expression = #{combineExpression},
    remark = #{remark},
    risk_feature = #{riskFeature},
    rec_stat = #{recStat},
    version = #{version},
    where combine_rule_id = #{combineRuleId}
  </update>
  <select id="findByName" resultType="int" parameterType="cn.com.zsyk.crm.manage.entity.SysRuleCombineRule">
    select count(0)
    from sys_rule_combine_rule
    where combine_rule_name = #{combineRuleName}
    <if test="combineRuleId != null and combineRuleId != ''">
      and combine_rule_id != #{combineRuleId}
    </if>
    and rec_stat='0'
  </select>
</mapper>