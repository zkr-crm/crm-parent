<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.zsyk.crm.ecif.mapper.EcCustSplitApplyMapper">
  <resultMap id="BaseResultMap" type="cn.com.zsyk.crm.ecif.entity.EcCustSplitApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="apply_Id" jdbcType="VARCHAR" property="applyId" />
    <result column="merge_apply_id" jdbcType="VARCHAR" property="mergeApplyId" />
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="apply_user" jdbcType="VARCHAR" property="applyUser" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="apply_opinion" jdbcType="VARCHAR" property="applyOpinion" />
    <result column="approve_user" jdbcType="VARCHAR" property="approveUser" />
    <result column="approve_time" jdbcType="TIMESTAMP" property="approveTime" />
    <result column="approve_conclusion" jdbcType="VARCHAR" property="approveConclusion" />
    <result column="approve_opinion" jdbcType="VARCHAR" property="approveOpinion" />
    <result column="apply_state" jdbcType="VARCHAR" property="applyState" />
    <result column="apply_typ" jdbcType="VARCHAR" property="applyTyp" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_date" jdbcType="VARCHAR" property="updateDate" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="time_stamp" jdbcType="TIMESTAMP" property="timeStamp" />
    <result column="rec_stat" jdbcType="VARCHAR" property="recStat" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ec_cust_split_apply
    where apply_Id = #{applyId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustSplitApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ec_cust_split_apply (apply_Id, merge_apply_id, task_id, 
      apply_user, apply_time, apply_opinion, 
      approve_user, approve_time, approve_conclusion, 
      approve_opinion, apply_state, apply_typ, 
      create_date, create_time, create_user, 
      update_date, update_time, update_user, 
      time_stamp, rec_stat)
    values (#{applyId,jdbcType=VARCHAR}, #{mergeApplyId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR}, 
      #{applyUser,jdbcType=VARCHAR},sysDate, #{applyOpinion,jdbcType=VARCHAR},
      #{approveUser,jdbcType=VARCHAR}, sysDate, #{approveConclusion,jdbcType=VARCHAR},
      #{approveOpinion,jdbcType=VARCHAR}, #{applyState,jdbcType=VARCHAR}, #{applyTyp,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, 
      #{timeStamp,jdbcType=TIMESTAMP}, #{recStat,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustSplitApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ec_cust_split_apply
    set merge_apply_id = #{mergeApplyId,jdbcType=VARCHAR},
      task_id = #{taskId,jdbcType=VARCHAR},
      apply_user = #{applyUser,jdbcType=VARCHAR},
      apply_time = sysDate,
      apply_opinion = #{applyOpinion,jdbcType=VARCHAR},
      approve_user = #{approveUser,jdbcType=VARCHAR},
      approve_time = sysDate,
      approve_conclusion = #{approveConclusion,jdbcType=VARCHAR},
      approve_opinion = #{approveOpinion,jdbcType=VARCHAR},
      apply_state = #{applyState,jdbcType=VARCHAR},
      apply_typ = #{applyTyp,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      time_stamp = #{timeStamp,jdbcType=TIMESTAMP},
      rec_stat = #{recStat,jdbcType=VARCHAR}
    where apply_Id = #{applyId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select apply_Id, merge_apply_id, task_id, apply_user, apply_time, apply_opinion, 
    approve_user, approve_time, approve_conclusion, approve_opinion, apply_state, apply_typ, 
    create_date, create_time, create_user, update_date, update_time, update_user, time_stamp, 
    rec_stat
    from ec_cust_split_apply
    where apply_Id = #{applyId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select apply_Id, merge_apply_id, task_id, apply_user, apply_time, apply_opinion, 
    approve_user, approve_time, approve_conclusion, approve_opinion, apply_state, apply_typ, 
    create_date, create_time, create_user, update_date, update_time, update_user, time_stamp, 
    rec_stat
    from ec_cust_split_apply
  </select>
  
  <!-- 根据条件查询 -->
  <select id="selectByEntity" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustSplitApply" resultMap="BaseResultMap">
    select apply_Id, merge_apply_id, task_id, apply_user, apply_time, apply_opinion, 
    approve_user, approve_time, approve_conclusion, approve_opinion, apply_state,apply_typ, create_date, 
    create_time, create_user, update_date, update_time, update_user, time_stamp, rec_stat
    from ec_cust_split_apply
    where 1=1 
    <if test="applyId != null and applyId != '' ">
		and apply_Id = #{applyId}
	</if>
    <if test="mergeApplyId != null and mergeApplyId != '' ">
		and merge_apply_id = #{mergeApplyId}
	</if>
    <if test="taskId != null and taskId != '' ">
		and task_id = #{taskId}
	</if>
	order by apply_time desc
  </select>
</mapper>