<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.zsyk.crm.ecif.mapper.EcCustPerMapper">
  <resultMap id="BaseResultMap" type="cn.com.zsyk.crm.ecif.entity.EcCustPer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="cust_no" jdbcType="VARCHAR" property="custNo" />
    <result column="cust_typ" jdbcType="VARCHAR" property="custTyp" />
    <result column="marrige_sts" jdbcType="VARCHAR" property="marrigeSts" />
    <result column="birth_place" jdbcType="VARCHAR" property="birthPlace" />
    <result column="nationality" jdbcType="VARCHAR" property="nationality" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="edu_degree" jdbcType="VARCHAR" property="eduDegree" />
    <result column="cnf_age_cert_flg" jdbcType="VARCHAR" property="cnfAgeCertFlg" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth_date" jdbcType="VARCHAR" property="birthDate" />
    <result column="death_date" jdbcType="VARCHAR" property="deathDate" />
    <result column="child_qty" jdbcType="INTEGER" property="childQty" />
    <result column="disab_date" jdbcType="VARCHAR" property="disabDate" />
    <result column="disab_end_date" jdbcType="VARCHAR" property="disabEndDate" />
    <result column="houshold_place" jdbcType="VARCHAR" property="housholdPlace" />
    <result column="polit_sts" jdbcType="VARCHAR" property="politSts" />
    <result column="religion" jdbcType="VARCHAR" property="religion" />
    <result column="blood_typ" jdbcType="VARCHAR" property="bloodTyp" />
    <result column="height" jdbcType="DECIMAL" property="height" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="per_icon_url" jdbcType="VARCHAR" property="perIconUrl" />
    <result column="per_icon_sml_blob" jdbcType="LONGVARBINARY" property="perIconSmlBlob" />
    <result column="per_icon_big_blob" jdbcType="LONGVARBINARY" property="perIconBigBlob" />
    <result column="blacklist_flg" jdbcType="VARCHAR" property="blacklistFlg" />
    <result column="key_cust_flg" jdbcType="VARCHAR" property="keyCustFlg" />
    <result column="visible_range" jdbcType="VARCHAR" property="visibleRange" />
    <result column="cust_source" jdbcType="VARCHAR" property="custSource" />
	  <result column="other_source" jdbcType="VARCHAR" property="otherSource" />
    <result column="cust_agent" jdbcType="VARCHAR" property="custAgent" />
    <result column="next_follow_up_tm" jdbcType="TIMESTAMP" property="nextFollowUpTm" />
    <result column="cust_stat" property="custStat" jdbcType="VARCHAR" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_date" jdbcType="VARCHAR" property="updateDate" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="time_stamp" jdbcType="TIMESTAMP" property="timeStamp" />
    <result column="rec_stat" jdbcType="VARCHAR" property="recStat" />
    <!-- 登记时间、原因 -->
    <result column="regi_date" jdbcType="VARCHAR" property="regiDate" />
    <result column="regi_reason" jdbcType="VARCHAR" property="regiReason" />
  	<result column="customer_id" jdbcType="VARCHAR" property="customerId" />

  </resultMap>
  
  <resultMap id="BaseResultMap2" type="cn.com.zsyk.crm.ecif.bo.cust.SimCustBaseInfo">
    <id column="cust_no" jdbcType="VARCHAR" property="custNo" />
    <result column="cust_typ" jdbcType="VARCHAR" property="custTyp" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="birth_place" jdbcType="VARCHAR" property="birthPlace" />
	<result column="cust_nam" jdbcType="VARCHAR" property="custNam" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth_date" jdbcType="VARCHAR" property="birthDate" />
    <result column="death_date" jdbcType="VARCHAR" property="deathDate" />
    <result column="cert_typ" property="certTyp" jdbcType="VARCHAR" />
    <result column="cert_no" property="certNo" jdbcType="VARCHAR" />
    <result column="phone_no1" jdbcType="VARCHAR" property="phoneNo1" />
    <result column="phone_no2" jdbcType="VARCHAR" property="phoneNo2" />
    <result column="phone_no3" jdbcType="VARCHAR" property="phoneNo3" />
    <result column="telephone1" jdbcType="VARCHAR" property="telephone1" />
    <result column="telephone2" jdbcType="VARCHAR" property="telephone2" />
	  <result column="det_addr" jdbcType="VARCHAR" property="detAddr" />
    <result column="cust_agent" jdbcType="VARCHAR" property="custAgent" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ec_cust_per
    where cust_no = #{custNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ec_cust_per (cust_no, cust_typ, marrige_sts, 
      birth_place, nationality, nation, 
      edu_degree, cnf_age_cert_flg, sex, 
      birth_date, death_date, child_qty, 
      disab_date, disab_end_date, houshold_place, 
      polit_sts, religion, blood_typ, 
      height, weight, native_place, 
      remark, per_icon_url, blacklist_flg, 
      key_cust_flg, visible_range, cust_source,other_source,
      cust_agent, next_follow_up_tm, cust_stat, 
      create_date, create_time, create_user,
      update_date, update_time, update_user, 
      time_stamp, rec_stat, per_icon_sml_blob, 
      per_icon_big_blob)
    values (#{custNo,jdbcType=VARCHAR}, #{custTyp,jdbcType=VARCHAR}, #{marrigeSts,jdbcType=VARCHAR},
	  #{birthPlace,jdbcType=VARCHAR}, #{nationality,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR},
	  #{eduDegree,jdbcType=VARCHAR}, #{cnfAgeCertFlg,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
	  #{birthDate,jdbcType=DATE}, #{deathDate,jdbcType=DATE}, #{childQty,jdbcType=INTEGER},
	  #{disabDate,jdbcType=DATE}, #{disabEndDate,jdbcType=DATE}, #{housholdPlace,jdbcType=VARCHAR},
	  #{politSts,jdbcType=VARCHAR}, #{religion,jdbcType=VARCHAR}, #{bloodTyp,jdbcType=VARCHAR},
	  #{height,jdbcType=DECIMAL}, #{weight,jdbcType=DECIMAL}, #{nativePlace,jdbcType=VARCHAR},
	  #{remark,jdbcType=VARCHAR}, #{perIconUrl,jdbcType=VARCHAR}, #{blacklistFlg,jdbcType=VARCHAR},
	  #{keyCustFlg,jdbcType=VARCHAR}, #{visibleRange,jdbcType=VARCHAR}, #{custSource,jdbcType=VARCHAR}, #{otherSource,jdbcType=VARCHAR},
	  #{custAgent,jdbcType=VARCHAR}, #{nextFollowUpTm,jdbcType=TIMESTAMP}, #{custStat,jdbcType=VARCHAR},
	  #{createDate,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR},
	  #{updateDate,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR},
	  #{timeStamp,jdbcType=TIMESTAMP}, #{recStat,jdbcType=VARCHAR}, #{perIconSmlBlob,jdbcType=LONGVARBINARY},
	  #{perIconBigBlob,jdbcType=LONGVARBINARY})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ec_cust_per
    set cust_typ = #{custTyp,jdbcType=VARCHAR},
      marrige_sts = #{marrigeSts,jdbcType=VARCHAR},
      birth_place = #{birthPlace,jdbcType=VARCHAR},
      nationality = #{nationality,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      edu_degree = #{eduDegree,jdbcType=VARCHAR},
      cnf_age_cert_flg = #{cnfAgeCertFlg,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      death_date = #{deathDate,jdbcType=DATE},
      child_qty = #{childQty,jdbcType=INTEGER},
      disab_date = #{disabDate,jdbcType=DATE},
      disab_end_date = #{disabEndDate,jdbcType=DATE},
      houshold_place = #{housholdPlace,jdbcType=VARCHAR},
      polit_sts = #{politSts,jdbcType=VARCHAR},
      religion = #{religion,jdbcType=VARCHAR},
      blood_typ = #{bloodTyp,jdbcType=VARCHAR},
      height = #{height,jdbcType=DECIMAL},
      weight = #{weight,jdbcType=DECIMAL},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      per_icon_url = #{perIconUrl,jdbcType=VARCHAR},
      blacklist_flg = #{blacklistFlg,jdbcType=VARCHAR},
      key_cust_flg = #{keyCustFlg,jdbcType=VARCHAR},
      visible_range = #{visibleRange,jdbcType=VARCHAR},
      cust_source = #{custSource,jdbcType=VARCHAR},
	  other_source = #{otherSource,jdbcType=VARCHAR},
      cust_agent = #{custAgent,jdbcType=VARCHAR},
      next_follow_up_tm = #{nextFollowUpTm,jdbcType=DATE},
      cust_stat = #{custStat,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      time_stamp = #{timeStamp,jdbcType=TIMESTAMP},
      rec_stat = #{recStat,jdbcType=VARCHAR},
      per_icon_sml_blob = #{perIconSmlBlob,jdbcType=LONGVARBINARY},
      per_icon_big_blob = #{perIconBigBlob,jdbcType=LONGVARBINARY}
    where cust_no = #{custNo,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select cust_no, cust_typ, marrige_sts, birth_place, nationality, nation, edu_degree,
	  cnf_age_cert_flg, sex, birth_date, death_date, child_qty, disab_date, disab_end_date,
	  houshold_place, polit_sts, religion, blood_typ, height, weight, native_place, remark,
	  per_icon_url, blacklist_flg, key_cust_flg, visible_range, cust_source, other_source, cust_agent,
	  next_follow_up_tm, cust_stat, create_date, create_time, create_user, update_date,
	  update_time, update_user, time_stamp, rec_stat, per_icon_sml_blob, per_icon_big_blob,customer_id
	  from ec_cust_per
	  where cust_no = #{custNo,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select cust_no, cust_typ, marrige_sts, birth_place, nationality, nation, edu_degree, 
    cnf_age_cert_flg, sex, birth_date, death_date, child_qty, disab_date, disab_end_date, 
    houshold_place, polit_sts, religion, blood_typ, height, weight, native_place, remark, 
    per_icon_url, blacklist_flg, key_cust_flg, visible_range, cust_source,other_source, cust_agent,
    next_follow_up_tm, cust_stat, create_date, create_time, create_user, update_date, 
    update_time, update_user, time_stamp, rec_stat, per_icon_sml_blob, per_icon_big_blob
    from ec_cust_per
  </select>
  
  <resultMap id="PerCustInfoResultMap" type="cn.com.zsyk.crm.ecif.bo.cust.PerCustList">
    	<id column="cust_no" jdbcType="VARCHAR" property="custNo" />
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
        <result column="cust_typ" jdbcType="VARCHAR" property="custTyp" />
        <result column="cust_name" jdbcType="VARCHAR" property="custName" />
        <result column="cust_source" jdbcType="VARCHAR" property="custSource" />
        <result column="cust_phase" jdbcType="VARCHAR" property="custPhase" />
        <result column="cust_agent" jdbcType="VARCHAR" property="custAgent" />
        <result column="next_follow_up_tm" jdbcType="VARCHAR" property="nextFollowUpTime" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="createUser" jdbcType="VARCHAR" property="createUser" />
        <!-- 20180109 -->
        <result column="cert_typ" jdbcType="VARCHAR" property="certTyp" />
        <result column="cert_no" jdbcType="VARCHAR" property="certNo" />
        <result column="cust_tag_cd" jdbcType="VARCHAR" property="custTagCd" />
         <!-- 登记时间、原因 -->
	    <result column="regi_date" jdbcType="VARCHAR" property="regiDate" />
	    <result column="regi_reason" jdbcType="VARCHAR" property="regiReason" />
	    <!-- 滞留时间、待分配原因-客户分配 -->
        <result column="sex" jdbcType="VARCHAR" property="sex" />
	    <result column="birth_date" jdbcType="VARCHAR" property="birthDate" />
	    <result column="dateDiff" jdbcType="INTEGER" property="dateDiff" />
	    <result column="retentionReason" jdbcType="VARCHAR" property="retentionReason" />

  </resultMap>
  <select id="selectPerCustList" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer" resultMap="PerCustInfoResultMap">
		select c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, d.phone_no1 as phone_number, a.cust_typ,a.cust_agent,a.cust_source,a.next_follow_up_tm,a.remark,a.create_user
		from ec_cust_per a,ec_cust_name b,ec_cust_cert c,ec_contact_way d
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
			and a.cust_no = d.cust_no  and d.rec_stat = '0'
			and c.cert_typ = (SELECT min(cert_typ) from ec_cust_cert d  where c.cust_no = d.cust_no)
			<if test="custName != null and custName !=''">
				and b.cust_nam = #{custName,jdbcType=VARCHAR}
			</if>
			<if test="custAgent != null and custAgent !=''">
				and a.cust_agent = #{custAgent,jdbcType=VARCHAR}
			</if>
			<if test="custNo != null and custNo !=''">
				and b.cust_no = #{custNo,jdbcType=VARCHAR}
			</if>
			<if test="certType != null and certType !=''">
				and c.cert_typ = #{certType,jdbcType=VARCHAR}
			</if>
			<if test="certNo != null and certNo !=''">
				and c.cert_no = #{certNo,jdbcType=VARCHAR}
			</if>
  </select>
  
  <delete id="deleteByCustNo"  parameterType="java.lang.String">
    delete from ec_cust_per
    where cust_no = #{custNo,jdbcType=VARCHAR}
  </delete>
  <select id="selectByBirthDate" parameterType="java.lang.String" resultMap="PerCustInfoResultMap">
		select a.cust_no,b.cust_nam as cust_name,c.phone_no1 as phone_number from ec_cust_per a,ec_cust_name b, ec_contact_way c
		where a.cust_no = b.cust_no
		and a.cust_no = c.cust_no 
		and  a.rec_stat = '0' 
		and b.rec_stat = '0' 
		and c.rec_stat = '0'
        and a.birth_date like CONCAT('%',#{birthDate})
  </select>
  
  <!-- 根据用户角色的权限查询客户列表 -->
  <select id="selectPerCustListByRole" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer" resultMap="PerCustInfoResultMap">
		select c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, a.sex, a.birth_date,
	  <!--(select max(phone_no1)
	  from ec_contact_way d
	  where rec_stat = '0'
	  and a.cust_no = d.cust_no) as phone_number,-->
		       a.cust_typ,a.cust_agent,a.cust_source,a.next_follow_up_tm,a.remark,a.create_user
		from
	  <choose>
		  <when test="custAgentList != null and custAgentList.size()>0">
			  (select a.cust_no,max(a.sex) as sex,max(a.birth_date) as birth_date,max(a.cust_typ) as cust_typ,max(m.cust_agent) as cust_agent,max(a.cust_source) as cust_source,max(a.next_follow_up_tm) as next_follow_up_tm,max(a.remark) as remark,max(a.create_user) as create_user,max(a.cust_stat) as cust_stat,max(a.rec_stat) as rec_stat from ec_cust_per a right join ec_cust_manager m on a.cust_no=m.cust_no where m.cust_agent in
			  <foreach collection="custAgentList" index="index" item="item" open="("
					   separator="," close=")">
				  #{item}
			  </foreach> group by a.cust_no
			  )a,
		  </when>
		  <otherwise>
			  ec_cust_per a,
		  </otherwise>
	  </choose>
		ec_cust_name b,ec_cust_cert c
		where a.cust_no = b.cust_no
			and a.rec_stat = '0'
	  		and a.cust_stat ='0'
			and b.rec_stat = '0'
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'

			<if test="custName != null and custName !=''">
				and b.cust_nam  like CONCAT(concat('%', #{custName,jdbcType=VARCHAR}), '%')
			</if>
			<if test="custTyp != null and custTyp !=''">
				and a.cust_typ = #{custTyp,jdbcType=VARCHAR}
			</if>
			<if test="custAgent != null and custAgent !=''">
				and a.cust_agent = #{custAgent,jdbcType=VARCHAR}
			</if>
	  		<if test="custNo != null and custNo !=''">
		       and a.cust_no = #{custNo,jdbcType=VARCHAR}
	        </if>
	        <if test="certTyp != null and certTyp !=''">
		      and c.cert_typ = #{certTyp,jdbcType=VARCHAR}
	        </if>
	        <if test="certNo != null and certNo !=''">
		      and c.cert_no = #{certNo,jdbcType=VARCHAR}
	        </if>
	        <if test="telephone != null and telephone !=''">
		     and (d.phone_no1 = #{telephone,jdbcType=VARCHAR}
		     or d.phone_no2 = #{telephone,jdbcType=VARCHAR} or
		     d.phone_no3 = #{telephone,jdbcType=VARCHAR})
	        </if>
	        <if test="beginAge != null and beginAge !=''">
				and a.birth_date &lt; add_months(sysdate,-12 * #{beginAge,jdbcType=VARCHAR})
			</if>
	  <if test="endAge != null and endAge !=''">
		  and a.birth_date &gt; add_months(sysdate,-12 * #{beginAge,jdbcType=VARCHAR})
	  		</if>
			<!--<if test="custAgentList != null and custAgentList.size()>0">
				and a.cust_agent in
				<foreach collection="custAgentList" index="index" item="item" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>-->
	  	order by b.time_stamp desc
  </select>
  <!-- 根据标签属性查询黑名单客户列表 -->
   <select id="selectPerCustListByTag" parameterType="cn.com.zsyk.crm.ecif.bo.cust.PerCustList" resultMap="PerCustInfoResultMap">
		select c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, d.phone_no1 as phone_number, a.cust_typ,a.cust_agent,a.cust_source,a.other_source,a.next_follow_up_tm,a.remark,a.create_user
		from
	   <!--<choose>
		   <when test="custAgent != null and custAgent !=''">
			   (select a.cust_no,max(a.sex) as sex,max(a.birth_date) as birth_date,max(a.cust_typ) as cust_typ,max(m.cust_agent) as cust_agent,max(a.cust_source) as cust_source,max(a.next_follow_up_tm) as next_follow_up_tm,max(a.remark) as remark,max(a.create_user) as create_user,max(a.cust_stat) as cust_stat,max(a.rec_stat) as rec_stat from ec_cust_per a right join ec_cust_manager m on a.cust_no=m.cust_no
			   	where m.cust_agent={custAgent,jdbcType=VARCHAR}
			    group by a.cust_no
			   )a,
		   </when>
		   <otherwise>
			   ec_cust_per a,
		   </otherwise>
	   </choose>-->
	   ec_cust_per a,ec_cust_name b,ec_cust_cert c,(select max(phone_no1) as phone_no1,max(phone_no2) as phone_no2,cust_no,max(phone_no3) as phone_no3  from ec_contact_way   where  rec_stat = '0' group by cust_no) d
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
	   		and a.cust_stat ='0'
			and a.cust_no = d.cust_no
			<!--and c.cert_typ = (SELECT min(cert_typ) from ec_cust_cert d  where c.cust_no = d.cust_no)-->
			and a.blacklist_flg = '1'
			<if test="custName != null and custName !=''">
				and b.cust_nam = #{custName,jdbcType=VARCHAR}
			</if>
			<if test="custNo != null and custNo !=''">
				and b.cust_no = #{custNo,jdbcType=VARCHAR}
			</if>
			<if test="certNo != null and certNo !=''">
				and c.cert_no = #{certNo,jdbcType=VARCHAR}
			</if>
			<if test="phoneNumber != null and phoneNumber !=''">
				and d.phone_no1 = #{phoneNumber,jdbcType=VARCHAR}
			</if>
			<!--<if test="custAgent != null and custAgent !=''">
				and a.cust_agent = #{custAgent,jdbcType=VARCHAR}
			</if>-->
			<if test="custTagCd != null and custTagCd !=''">
				AND a.cust_no in ( SELECT zct.cust_no from  ec_cust_tag zct where zct.rec_stat=0 and zct.cust_tag_cd LIKE CONCAT(CONCAT('%', #{custTagCd,jdbcType=VARCHAR}), '%'));
			</if>
  </select>
  <!-- 根据标签查询 非黑名单个人-->
   <select id="selectNotBlackPerCustListByTag" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer" resultMap="PerCustInfoResultMap">
		select c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, d.phone_no1 as phone_number, a.cust_typ,s.user_name as cust_agent,a.cust_source,a.other_source,a.next_follow_up_tm,a.remark,a.create_user
		from ec_cust_per a,ec_cust_name b,ec_cust_cert c,(select max(phone_no1) as phone_no1,max(phone_no2) as phone_no2,cust_no,max(phone_no3) as phone_no3  from ec_contact_way   where  rec_stat = '0' group by cust_no) d,sys_user_info s
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
	   		and a.cust_stat ='0'
	  		<!--and a.cust_agent=s.employee_id-->
			and a.cust_no = d.cust_no
			<!--and c.cert_typ = (SELECT min(cert_typ) from ec_cust_cert d  where c.cust_no = d.cust_no)-->
			and a.blacklist_flg = '0'
			<if test="custName != null and custName !=''">
				and instr(b.cust_nam, #{custName,jdbcType=VARCHAR}) &gt; 0
			</if>
			<if test="custNo != null and custNo !=''">
				and b.cust_no = #{custNo,jdbcType=VARCHAR}
			</if>
			<if test="custTagCd != null and custTagCd !=''">
				AND a.cust_no in ( SELECT zct.cust_no from  ec_cust_tag zct where zct.rec_stat=0 and zct.cust_tag_cd LIKE CONCAT(CONCAT('%', #{custTagCd,jdbcType=VARCHAR}), '%'));
			</if>
  </select>
  <!-- 查询黑名单人员 -->
  <select id="selectBlackPerCustList" parameterType="cn.com.zsyk.crm.ecif.bo.cust.PerCustList" resultMap="PerCustInfoResultMap">
		select  f.regi_date,f.regi_reason,c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, d.phone_no1 as phone_number, a.cust_typ,a.cust_agent,a.cust_source,a.other_source,a.next_follow_up_tm,a.remark,a.create_user
		from
	 <!-- <choose>
		  <when test="custAgent != null and custAgent !=''">
			  (select a.cust_no,max(a.sex) as sex,max(a.birth_date) as birth_date,max(a.cust_typ) as cust_typ,max(m.cust_agent) as cust_agent,max(a.cust_source) as cust_source,max(a.next_follow_up_tm) as next_follow_up_tm,max(a.remark) as remark,max(a.create_user) as create_user,max(a.cust_stat) as cust_stat,max(a.rec_stat) as rec_stat from ec_cust_per a right join ec_cust_manager m on a.cust_no=m.cust_no
			  where m.cust_agent={custAgent,jdbcType=VARCHAR}
			  group by a.cust_no
			  )a,
		  </when>
		  <otherwise>
			  ec_cust_per a,
		  </otherwise>
	  </choose>-->
	  ec_cust_per a,ec_cust_name b,ec_cust_cert c,(select max(phone_no1) as phone_no1,max(phone_no2) as phone_no2,cust_no,max(phone_no3) as phone_no3  from ec_contact_way   where  rec_stat = '0' group by cust_no) d,ec_black_list f
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
	  		and a.cust_stat ='0'
			and a.cust_no = d.cust_no
			<!--and c.cert_typ = (SELECT min(cert_typ) from ec_cust_cert d  where c.cust_no = d.cust_no)-->
			and f.cust_no = a.cust_no
			and a.blacklist_flg = '1'
			<!-- and f.upd_seqno = (SELECT MAX(upd_seqno) from ec_black_list tt where tt.cust_no = b.cust_no) -->
			<if test="custName != null and custName !=''">
				and b.cust_nam LIKE CONCAT(CONCAT('%', #{custName,jdbcType=VARCHAR}), '%')
			</if>
			<if test="custNo != null and custNo !=''">
				and b.cust_no = #{custNo,jdbcType=VARCHAR}
			</if>
			<!--<if test="custAgent != null and custAgent !=''">
				and a.cust_agent = #{custAgent,jdbcType=VARCHAR}
			</if>-->
			<if test="certNo != null and certNo !=''">
				and c.cert_no = #{certNo,jdbcType=VARCHAR}
			</if>
			<if test="phoneNumber != null and phoneNumber !=''">
				and d.phone_no1 = #{phoneNumber,jdbcType=VARCHAR}
			</if>
			<if test="certTyp != null and certTyp !=''">
				and c.cert_typ = #{certTyp,jdbcType=VARCHAR}
			</if>
  </select>
  
  <!-- 非黑名单人员 -->
   <select id="selectNotBlackPerCustList" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer" resultMap="PerCustInfoResultMap">
		select c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, d.phone_no1 as phone_number, a.cust_typ,s.user_name as cust_agent,a.cust_source,a.other_source,a.next_follow_up_tm,a.remark,a.create_user
		from ec_cust_per a,ec_cust_name b,ec_cust_cert c,(select max(phone_no1) as phone_no1,max(phone_no2) as phone_no2,cust_no,max(phone_no3) as phone_no3 from ec_contact_way   where  rec_stat = '0' group by cust_no) d,sys_user_info s
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
	   		and a.cust_stat ='0'
			and a.cust_no = d.cust_no
			and a.blacklist_flg = '0'
			and a.cust_agent=s.employee_id(+)
			<!--and c.cert_typ = (SELECT min(cert_typ) from ec_cust_cert d  where c.cust_no = d.cust_no)-->
			<if test="custName != null and custName !=''">
				and instr(b.cust_nam, #{custName,jdbcType=VARCHAR}) &gt; 0
			</if>
			<if test="custAgent != null and custAgent !=''">
				and a.cust_agent = #{custAgent,jdbcType=VARCHAR}
			</if>
			<if test="custNo != null and custNo !=''">
				and b.cust_no = #{custNo,jdbcType=VARCHAR}
			</if>
  </select>
  <!-- 重点客户人员 -->
   <select id="selectImportantPerCustList" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer" resultMap="PerCustInfoResultMap">
		select  f.regi_date,f.regi_reason,c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, d.phone_no1 as phone_number, a.cust_typ,a.cust_agent,a.cust_source,a.other_source,a.next_follow_up_tm,a.remark,a.create_user
		from ec_cust_per a,ec_cust_name b,ec_cust_cert c,(select max(phone_no1) as phone_no1,max(phone_no2) as phone_no2,cust_no,max(phone_no3) as phone_no3 from ec_contact_way   where  rec_stat = '0' group by cust_no) d,ec_cust_key f
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
	   		and a.cust_stat ='0'
			and a.cust_no = d.cust_no
			<!--and c.cert_typ = (SELECT min(cert_typ) from ec_cust_cert d  where c.cust_no = d.cust_no)-->
			and f.cust_no = a.cust_no
			and a.key_cust_flg = '1'
			<if test="custName != null and custName !=''">
				and instr(b.cust_nam, #{custName,jdbcType=VARCHAR}) &gt; 0
			</if>
			<if test="custNo != null and custNo !=''">
				and b.cust_no = #{custNo,jdbcType=VARCHAR}
			</if>
  </select>
  
  <!-- 非重点客户人员 -->
   <select id="selectNotImportantPerCustList" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer" resultMap="PerCustInfoResultMap">
		select c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, d.phone_no1 as phone_number, a.cust_typ,a.cust_agent,a.cust_source,a.other_source,a.next_follow_up_tm,a.remark,a.create_user
		from ec_cust_per a,ec_cust_name b,ec_cust_cert c,(select max(phone_no1) as phone_no1,max(phone_no2) as phone_no2,cust_no,max(phone_no3) as phone_no3,max(REC_STAT) as REC_STAT  from ec_contact_way   where  rec_stat = '0' group by cust_no) d
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
	   		and a.cust_stat ='0'
			and a.cust_no = d.cust_no and d.rec_stat = '0'
			and (a.key_cust_flg = '0' or a.key_cust_flg is null)
			<!--and c.cert_typ = (SELECT min(cert_typ) from ec_cust_cert d  where c.cust_no = d.cust_no)-->
			<if test="custName != null and custName !=''">
				and b.cust_nam like  concat(concat('%',#{custName,jdbcType=VARCHAR}),'%') 
			</if>
			<if test="custNo != null and custNo !=''">
				and b.cust_no like  concat(concat('%',#{custNo,jdbcType=VARCHAR}),'%') 
			</if>
  </select>
  
   <resultMap id="SameCustRuleResultMap" type="cn.com.zsyk.crm.ecif.entity.EcSameCustRule">
    	<result column="judge_condition" jdbcType="VARCHAR" property="judgeCondition" />
        <result column="priority" jdbcType="VARCHAR" property="priority" />

  </resultMap>
  <select id="selectSameCustRule" parameterType="java.lang.String" resultMap="SameCustRuleResultMap">
		SELECT
			rule_id,
			channel,
			judge_condition,
			priority,
			use_flag
			from ec_same_cust_rule
			order by priority ASC
		
  </select>
  <!-- and a.cust_no = d.cust_no and d.contact_sqn = '0' and d.rec_stat = '0' -->
  <select id="selectHaveCustNo" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer" resultMap="PerCustInfoResultMap">
		select a.cust_no, b.cust_nam as cust_name, a.cust_typ
		FROM ec_cust_per a,ec_cust_name b,ec_cust_cert c
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
			
			<if test="custNo != null and custNo !=''">
				and a.cust_no = #{custNo,jdbcType=VARCHAR}
			</if>
			<if test="custNam != null and custNam !=''">
				and b.cust_nam = #{custNam,jdbcType=VARCHAR}
			</if>
			<if test="sex != null and sex !=''">
				and a.sex = #{sex,jdbcType=VARCHAR}
			</if>
			<if test="certTyp != null and certTyp !=''">
				and c.cert_typ = #{certTyp,jdbcType=VARCHAR}
			</if>
			<if test="certNo != null and certNo !=''">
				and c.cert_no = #{certNo,jdbcType=VARCHAR}
			</if>
			<if test="birthDate != null and birthDate !=''">
				AND date_format(a.birth_date,'%Y%m%d')= #{birthDate,jdbcType=VARCHAR}
			</if>
  </select>

	<!-- 获取所有客户的总数量 -->
	<select id="selectAllCustCount" resultType="java.lang.Long">
		select count(*)
		from
		ec_cust_per
	</select>
	<!-- 获取所有客户的客户号用于相似客户判断 -->
	<select id="selectAllCustForSimCust" parameterType="map"
		resultMap="BaseResultMap2">
		select * from(
				select rownum rn,cust_no from ec_cust_per
		)
		where rn between #{start} and #{end}
	</select>

	<!-- 获取客户的基本信息用于相似客户判断 -->
	<select id="selectCustlist" parameterType="map" resultMap="BaseResultMap2">
		select *
		from (
		select
		t1.cust_no,t2.cust_nam,t1.sex,t1.birth_date,
		t3.cert_typ,t3.cert_no,t4.phone_no1,t4.phone_no2,t4.phone_no3,
		t4.telephone1,t4.telephone2,t4.contact_sqn,t5.det_addr
		from
		ec_cust_per t1
		left join ec_cust_name t2  on t1.cust_no=t2.cust_no
		left join ec_cust_cert t3  on t1.cust_no=t3.cust_no
		left join ec_contact_way t4 on t1.cust_no=t4.cust_no
		left join ec_contact_addr t5 on t1.cust_no=t5.cust_no
		where 1=1
		and t1.cust_stat ='0'
		and t1.CUST_NO NOT IN(SELECT r.SIMILAR_CUST_NO CUST_NO FROM EC_SIM_CUST r WHERE r.rec_stat='0'and r.SIM_CUST_STATE in('0','1'))
		) t_base inner join
		(
		select cust_no,max(contact_sqn) sqn from (
		select
		t1.cust_no,t2.cust_nam,t1.sex,t1.birth_date,
		t3.cert_typ,t3.cert_no,t4.phone_no1,t4.phone_no2,t4.phone_no3,
		t4.telephone1,t4.telephone2,t4.contact_sqn,t5.det_addr
		from
		ec_cust_per t1
		left join ec_cust_name t2  on t1.cust_no=t2.cust_no
		left join ec_cust_cert t3  on t1.cust_no=t3.cust_no
		left join ec_contact_way t4 on t1.cust_no=t4.cust_no
		left join ec_contact_addr t5 on t1.cust_no=t5.cust_no
		where 1=1
		and t1.cust_stat ='0'
		and t1.CUST_NO NOT IN(SELECT r.SIMILAR_CUST_NO CUST_NO FROM EC_SIM_CUST r WHERE r.rec_stat='0' and r.SIM_CUST_STATE in('0','1'))
		) t_base
		group by cust_no
		)t_base1
		on t_base.cust_no= t_base1.cust_no
		and
		t_base.contact_sqn=t_base1.sqn
		where 1=1
		<if test="custNo != null and custNo !=''">
			and t_base.cust_no = #{custNo}
		</if>
		<if test="custNam != null and custNam !=''">
			and t_base.cust_nam = #{custNam}
		</if>
		<if test="sex != null and sex !=''">
			and t_base.sex = #{sex}
		</if>
		<if test="birthDate != null">
			and t_base.birth_date = #{birthDate,jdbcType=DATE}
		</if>
		<if test="certTyp != null and certTyp !=''">
			and t_base.cert_typ = #{certTyp}
		</if>
		<if test="certNo != null and certNo !=''">
			and t_base.cert_no = #{certNo}
		</if>
		<if test="detAddr != null and detAddr != ''">
			and t_base.det_addr = #{detAddr}
		</if>

		<if test="(phoneNo1 != null and phoneNo1 !='') or (phoneNo2 != null and phoneNo2 !='') or (phoneNo3 != null and phoneNo3 !='') ">
			and (
			<if test="phoneNo1 != null and phoneNo1 !=''">
				(
				t_base.phone_no1 = #{phoneNo1}
				or t_base.phone_no2 = #{phoneNo1}
				or t_base.phone_no3 = #{phoneNo1}
				)
			</if>
			<if test="phoneNo2 != null and phoneNo2 !=''">

				<choose>
					<when test="phoneNo1 == null or phoneNo1 ==''">
						(
						t_base.phone_no1 = #{phoneNo2}
						or t_base.phone_no2 = #{phoneNo2}
						or t_base.phone_no3 = #{phoneNo2}
						)
					</when>
					<otherwise>
						or (
						t_base.phone_no1 = #{phoneNo2}
						or t_base.phone_no2 = #{phoneNo2}
						or t_base.phone_no3 = #{phoneNo2}
						)
					</otherwise>
				</choose>
			</if>
			<if test="phoneNo3 != null and phoneNo3 !=''">
				<choose>
					<when test="(phoneNo1 == null or phoneNo1 =='') and (phoneNo2 == null or phoneNo2 =='')">
						(
						t_base.phone_no1 = #{phoneNo3}
						or t_base.phone_no2 = #{phoneNo3}
						or t_base.phone_no3 = #{phoneNo3}
						)
					</when>
					<otherwise>
						or (
						t_base.phone_no1 = #{phoneNo3}
						or t_base.phone_no2 = #{phoneNo3}
						or t_base.phone_no3 = #{phoneNo3}
						)
					</otherwise>
				</choose>
			</if>
			)
		</if>
	</select>
<!-- 根据客户名称查询客户列表-客户分配 -->
  <select id="selectPerCustListByNameDeli" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer" resultMap="PerCustInfoResultMap">
		select c.cert_typ,c.cert_no,a.cust_no, b.cust_nam as cust_name, d.phone_no1 as phone_number, a.cust_typ,a.cust_agent,a.cust_source,a.other_source,a.next_follow_up_tm,a.remark,a.create_user
		,e.deal_action as retentionReason, (sysdate - e.time_stamp) as dateDiff, a.sex
		from ec_cust_per a,ec_cust_name b,ec_cust_cert c,ec_contact_way d, ec_cust_sale_chg_trace e
		where a.cust_no = b.cust_no
			and a.rec_stat = '0' 
			and b.rec_stat = '0' 
			and c.cust_no = a.cust_no
			and c.rec_stat = '0'
			and c.cert_sts = '1'
			and a.cust_no = d.cust_no and d.rec_stat = '0'
			and c.cert_typ = (SELECT min(cert_typ) from ec_cust_cert d  where c.cust_no = d.cust_no)
			and a.cust_no = e.cust_no
			and (e.time_stamp, e.cust_no) in(select MAX(time_stamp), cust_no from ec_cust_sale_chg_trace GROUP BY cust_no)
			<if test="custName != null and custName !=''">
				and b.cust_nam like CONCAT(CONCAT('%', #{custName,jdbcType=VARCHAR}), '%')
			</if>
			<if test="custAgent != null and custAgent !=''">
				and (a.cust_agent is not null and a.cust_agent &lt;&gt;'')
			</if>
			<if test="custAgent == null or custAgent ==''">
				and (a.cust_agent is null or a.cust_agent ='')
			</if>
			order by dateDiff desc			
  </select>
    <update id="updateCustAgent" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ec_cust_per
    set 
      cust_agent = #{custAgent,jdbcType=VARCHAR}
    where cust_no = #{custNo,jdbcType=VARCHAR}
  </update>
    <update id="updateRecStat" parameterType="cn.com.zsyk.crm.ecif.entity.EcCustPer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ec_cust_per
        set
        rec_stat = #{recStat,jdbcType=VARCHAR}
        where cust_no = #{custNo,jdbcType=VARCHAR}
    </update>
	<select id="selectCustNo" parameterType="java.lang.String" resultType="java.lang.String">
		<!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
		select cust_no
		from ec_cust_per
		where cust_no = #{custNo,jdbcType=VARCHAR}
	</select>
	
	<select id="selectAllCustForAddressInsufficient" parameterType="Map" resultMap="BaseResultMap2">
		<!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
		select cp.cust_no,cn.cust_nam,to_date(cp.create_date,'yyyy-MM-dd HH24:mi:ss') create_date,ui.user_name cust_agent ,
		code_desc cust_typ
		from
		ec_cust_per cp left join ec_cust_name cn
		on cp.cust_no = cn.cust_no
		left join ec_contact_addr ca
		on cp.cust_no = ca.cust_no and ca. rec_stat='0'
		left join  sys_code_mng cm
		on cm.code_val = cp.cust_typ and code_type = 'CustType'
		left join  sys_user_info ui
		on cp.cust_agent = ui.employee_id
		where cp.cust_agent = #{employeeId} and cp.rec_stat = 0
		and (ca.prov_cd is null or ca.city_cd is null or ca.county_cd is null )
		order by cp.create_date desc,cp.create_time desc
	</select>

	<!-- 获取自动发送生日短信需要的客户 -->
	<select id="getCustomerByEntity" resultType="Map" parameterType="Map">
		SELECT b.phone_no1,b.contact_nam,b.cust_no
		FROM ec_cust_per a,ec_contact_way b
		where a.cust_no=b.cust_no
		  and to_char(a.birth_date,'mm-dd') <![CDATA[=]]> substr(#{birthDate},6,5)
		group by b.phone_no1,b.contact_nam,b.cust_no
	</select>
	<!-- 获取自动发送续保短信需要的客户 -->
	<select id="getCustomerByEnddate" resultType="Map" parameterType="Map">
		SELECT t1.enddate, t3.PHONE_NO1, t3.contact_nam
		FROM gupolicyrisk t1, gupolicymain t2, ec_contact_way t3
		where t1.policyno = t2.policyno
		  and t2.applicode = t3.cust_no
		  and t1.enddate <![CDATA[=]]> TO_DATE(#{enddate},'yyyy-mm-dd HH24:mi:ss')
		group by t3.phone_no1,t3.contact_nam,t3.cust_no
	</select>


	<select id="getCustNoListByCustNo" parameterType="java.lang.String" resultType="java.lang.String">
		select new_cust_no from EC_CUST_MERGE_RELA
		where  old_cust_no	in
		　　<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
		　　　　#{item}
		　　</foreach>
	</select>
</mapper>