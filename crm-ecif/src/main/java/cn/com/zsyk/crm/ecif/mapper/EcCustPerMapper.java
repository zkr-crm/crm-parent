package cn.com.zsyk.crm.ecif.mapper;

import cn.com.zsyk.crm.ecif.bo.cust.PerCustList;
import cn.com.zsyk.crm.ecif.bo.cust.SimCustBaseInfo;
import cn.com.zsyk.crm.ecif.entity.EcCustNoCreateParm;
import cn.com.zsyk.crm.ecif.entity.EcCustPer;
import cn.com.zsyk.crm.ecif.entity.EcSameCustRule;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface EcCustPerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ec_cust_per
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(String custNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ec_cust_per
     *
     * @mbggenerated
     */
    int insert(EcCustPer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ec_cust_per
     *
     * @mbggenerated
     */
    EcCustPer selectByPrimaryKey(String custNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ec_cust_per
     *
     * @mbggenerated
     */
    List<EcCustPer> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ec_cust_per
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(EcCustPer record);
        /**
     * Desc: 查询个人客户列表
     * @return
     * @author 
     */
	List<PerCustList> selectPerCustList(EcCustPer custper);
	    /**
	 * Desc: 根据出生日期查询个人客户列表
	 * @return
	 * @author 
	 */
	PerCustList selectByBirthDate(String birthDate);

	/**
	 * Desc:  根据客户逻辑删除信息
	 * @param custNo
	 * @return
	 * @author
	 */
	int deleteByCustNo(String custNo);
	
	List<PerCustList> selectPerCustListByTag(PerCustList custper);
	List<PerCustList> selectNotBlackPerCustListByTag(EcCustPer custper);
	List<PerCustList> selectNotBlackPerCustListByTag(Map map);

	List<PerCustList> selectBlackPerCustList(PerCustList custper);
	
	List<PerCustList> selectNotBlackPerCustList(EcCustPer custper);
	List<PerCustList> selectNotBlackPerCustList(Map map);

	List<PerCustList> selectImportantPerCustList(EcCustPer custper);
	
	List<PerCustList> selectNotImportantPerCustList(EcCustPer custper);
	List<PerCustList> selectPerCustListByRole(Map map);
	
	List<EcSameCustRule> selectSameCustRule();
	
	List<PerCustList> selectHaveCustNo(EcCustNoCreateParm custnoparm);
	
	List<SimCustBaseInfo> selectAllCustForSimCust(Map map);
	long selectAllCustCount();
	List<SimCustBaseInfo> selectCustlist(Map map);
	int updateRecStat(@Param("custNo") String custNo, @Param("recStat")String recStat);
	String selectCustNo(String custNo);
	
	List<SimCustBaseInfo> selectAllCustForAddressInsufficient(Map map);
	List<Map<String, String>> getCustomerByEntity(Map map);

	List<String> getCustNoListByCustNo(List<String>  custNo);
}